INSERT INTO courses (course_name, course_description) VALUES ('Intro to SQL', 'Learn the basics of SQL');
INSERT INTO courses (course_name, course_description) VALUES ('Intro to Python', 'Learn the basics of Python');
INSERT INTO courses (course_name, course_description) VALUES ('Intro to  Web Development', 'Learn the basics of Web Development');

-- 30 mock questions for SQL
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I filter selected tables?','What is the keywords for this?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I create a table?','I tried INSERT INTO tables.', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I group data in SQL?', 'What is the syntax for grouping data in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I order data in SQL?', 'What is the syntax for ordering data in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I insert data into a table in SQL?', 'What is the syntax for inserting data into a table in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I update data in a table in SQL?', 'What is the syntax for updating data in a table in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I delete data from a table in SQL?', 'What is the syntax for deleting data from a table in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I create a new table in SQL?', 'What is the syntax for creating a new table in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I drop a table in SQL?', 'What is the syntax for dropping a table in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I create a new database in SQL?', 'What is the syntax for creating a new database in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I drop a database in SQL?', 'What is the syntax for dropping a database in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I grant privileges in SQL?', 'What is the syntax for granting privileges in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I revoke privileges in SQL?', 'What is the syntax for revoking privileges in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I create a view in SQL?', 'What is the syntax for creating a view in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I use subqueries in SQL?', 'What is the syntax for using subqueries in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I use stored procedures in SQL?', 'What is the syntax for using stored procedures in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I use triggers in SQL?', 'What is the syntax for using triggers in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I use transactions in SQL?', 'What is the syntax for using transactions in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I use indexes in SQL?', 'What is the syntax for using indexes in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I optimize SQL queries?', 'What are some techniques for optimizing SQL queries?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I use aggregate functions in SQL?', 'What is the syntax for using aggregate functions in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I use string functions in SQL?', 'What is the syntax for using string functions in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I use date functions in SQL?', 'What is the syntax for using date functions in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I use conditional statements in SQL?', 'What is the syntax for using conditional statements in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I use case statements in SQL?', 'What is the syntax for using case statements in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I use window functions in SQL?', 'What is the syntax for using window functions in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I use common table expressions in SQL?', 'What is the syntax for using common table expressions in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I use temporary tables in SQL?', 'What is the syntax for using temporary tables in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How do I use full-text search in SQL?', 'What is the syntax for using full-text search in SQL?', '00000000-0000-0000-0000-000000000000', 1);
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('What is the difference between inner join and outer join?', 'What is the difference between inner join and outer join in SQL?', '00000000-0000-0000-0000-000000000000', 1);

-- Mock answer for SQL
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('Use the WHERE clause', '00000000-0000-0000-0000-000000000000', 1);

-- Mock questions for Python
INSERT INTO questions (question_title, question_text, user_id, course_id) VALUES ('How to make a for loop in Python', 'How to do?','00000000-0000-0000-0000-000000000000', 2);

-- 30 mock answers for Python
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('You can use the for loop in Python to iterate over a sequence of values. For example, to print the numbers from 1 to 10, you can use the following code: for i in range(1, 11): print(i)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('The for loop in Python is used to iterate over a sequence of values. You can use the range() function to generate a sequence of numbers. For example, to print the even numbers from 2 to 10, you can use the following code: for i in range(2, 11, 2): print(i)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('In Python, you can use the for loop to iterate over a sequence of values. For example, to print the elements of a list, you can use the following code: my_list = [1, 2, 31, 4, 5]; for item in my_list: print(item)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('The for loop in Python is used to iterate over a sequence of values. You can use the enumerate() function to get both the index and the value of each element in the sequence. For example, to print the index and value of each element in a list, you can use the following code: my_list = [1, 2, 31, 4, 5]; for i, item in enumerate(my_list): print(i, item)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('You can use the for loop in Python to iterate over a sequence of values. For example, to print the characters of a string, you can use the following code: my_string = "Hello, world!"; for char in my_string: print(char)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('The for loop in Python is used to iterate over a sequence of values. You can use the zip() function to iterate over multiple sequences at the same time. For example, to print the corresponding elements of two lists, you can use the following code: list1 = [1, 2, 31]; list2 = [4, 5, 6]; for item1, item2 in zip(list1, list2): print(item1, item2)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('In Python, you can use the for loop to iterate over a sequence of values. You can use the break statement to exit the loop early if a certain condition is met. For example, to print the numbers from 1 to 10, but stop if the number 5 is reached, you can use the following code: for i in range(1, 11): if i == 5: break; print(i)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('The for loop in Python is used to iterate over a sequence of values. You can use the continue statement to skip over certain values in the sequence. For example, to print the even numbers from 1 to 10, you can use the following code: for i in range(1, 11): if i % 2 == 1: continue; print(i)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('You can use the for loop in Python to iterate over a sequence of values. You can use the else statement to execute code after the loop has finished. For example, to print a message after the loop has finished, you can use the following code: for i in range(1, 11): print(i); else: print("Loop finished")', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('The for loop in Python is used to iterate over a sequence of values. You can use the pass statement to do nothing in the loop body. For example, to create an empty loop, you can use the following code: for i in range(10): pass', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('In Python, you can use the for loop to iterate over a sequence of values. You can use the reversed() function to iterate over the sequence in reverse order. For example, to print the numbers from 10 to 1, you can use the following code: for i in reversed(range(1, 11)): print(i)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('The for loop in Python is used to iterate over a sequence of values. You can use the sorted() function to iterate over the sequence in sorted order. For example, to print the elements of a list in sorted order, you can use the following code: my_list = [3, 1, 4, 1, 5, 9, 2, 6, 5]; for item in sorted(my_list): print(item)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('You can use the for loop in Python to iterate over a sequence of values. You can use the range() function with a step value to iterate over every nth value in the sequence. For example, to print every third number from 1 to 10, you can use the following code: for i in range(1, 11, 31): print(i)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('The for loop in Python is used to iterate over a sequence of values. You can use the len() function to get the length of a sequence, and then use the range() function to iterate over the indices of the sequence. For example, to print the elements of a list along with their indices, you can use the following code: my_list = [1, 2, 31, 4, 5]; for i in range(len(my_list)): print(i, my_list[i])', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('In Python, you can use the for loop to iterate over a sequence of values. You can use the list() function to convert a sequence to a list, and then use the list index to access elements of the list. For example, to print the elements of a tuple, you can use the following code: my_tuple = (1, 2, 31, 4, 5); for item in list(my_tuple): print(item)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('The for loop in Python is used to iterate over a sequence of values. You can use the join() method to concatenate the elements of a sequence into a string. For example, to concatenate the elements of a list into a comma-separated string, you can use the following code: my_list = ["apple", "banana", "cherry"]; result = ",".join(my_list); print(result)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('You can use the for loop in Python to iterate over a sequence of values. You can use the zip() function to iterate over multiple sequences at the same time. For example, to print the corresponding elements of two lists, you can use the following code: list1 = [1, 2, 31]; list2 = [4, 5, 6]; for item1, item2 in zip(list1, list2): print(item1, item2)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('The for loop in Python is used to iterate over a sequence of values. You can use the reversed() function to iterate over the sequence in reverse order. For example, to print the numbers from 10 to 1, you can use the following code: for i in reversed(range(1, 11)): print(i)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('In Python, you can use the for loop to iterate over a sequence of values. You can use the break statement to exit the loop early if a certain condition is met. For example, to print the numbers from 1 to 10, but stop if the number 5 is reached, you can use the following code: for i in range(1, 11): if i == 5: break; print(i)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('The for loop in Python is used to iterate over a sequence of values. You can use the continue statement to skip over certain values in the sequence. For example, to print the even numbers from 1 to 10, you can use the following code: for i in range(1, 11): if i % 2 == 1: continue; print(i)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('You can use the for loop in Python to iterate over a sequence of values. You can use the else statement to execute code after the loop has finished. For example, to print a message after the loop has finished, you can use the following code: for i in range(1, 11): print(i); else: print("Loop finished")', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('The for loop in Python is used to iterate over a sequence of values. You can use the pass statement to do nothing in the loop body. For example, to create an empty loop, you can use the following code: for i in range(10): pass', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('In Python, you can use the for loop to iterate over a sequence of values. You can use the sorted() function to iterate over the sequence in sorted order. For example, to print the elements of a list in sorted order, you can use the following code: my_list = [3, 1, 4, 1, 5, 9, 2, 6, 5]; for item in sorted(my_list): print(item)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('You can use the for loop in Python to iterate over a sequence of values. You can use the range() function with a step value to iterate over every nth value in the sequence. For example, to print every third number from 1 to 10, you can use the following code: for i in range(1, 11, 31): print(i)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('The for loop in Python is used to iterate over a sequence of values. You can use the len() function to get the length of a sequence, and then use the range() function to iterate over the indices of the sequence. For example, to print the elements of a list along with their indices, you can use the following code: my_list = [1, 2, 31, 4, 5]; for i in range(len(my_list)): print(i, my_list[i])', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('In Python, you can use the for loop to iterate over a sequence of values. You can use the list() function to convert a sequence to a list, and then use the list index to access elements of the list. For example, to print the elements of a tuple, you can use the following code: my_tuple = (1, 2, 31, 4, 5); for item in list(my_tuple): print(item)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('The for loop in Python is used to iterate over a sequence of values. You can use the join() method to concatenate the elements of a sequence into a string. For example, to concatenate the elements of a list into a comma-separated string, you can use the following code: my_list = ["apple", "banana", "cherry"]; result = ",".join(my_list); print(result)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('You can use the for loop in Python to iterate over a sequence of values. You can use the zip() function to iterate over multiple sequences at the same time. For example, to print the corresponding elements of two lists, you can use the following code: list1 = [1, 2, 31]; list2 = [4, 5, 6]; for item1, item2 in zip(list1, list2): print(item1, item2)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('The for loop in Python is used to iterate over a sequence of values. You can use the reversed() function to iterate over the sequence in reverse order. For example, to print the numbers from 10 to 1, you can use the following code: for i in reversed(range(1, 11)): print(i)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('In Python, you can use the for loop to iterate over a sequence of values. You can use the break statement to exit the loop early if a certain condition is met. For example, to print the numbers from 1 to 10, but stop if the number 5 is reached, you can use the following code: for i in range(1, 11): if i == 5: break; print(i)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('The for loop in Python is used to iterate over a sequence of values. You can use the continue statement to skip over certain values in the sequence. For example, to print the even numbers from 1 to 10, you can use the following code: for i in range(1, 11): if i % 2 == 1: continue; print(i)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('You can use the for loop in Python to iterate over a sequence of values. You can use the else statement to execute code after the loop has finished. For example, to print a message after the loop has finished, you can use the following code: for i in range(1, 11): print(i); else: print("Loop finished")', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('The for loop in Python is used to iterate over a sequence of values. You can use the pass statement to do nothing in the loop body. For example, to create an empty loop, you can use the following code: for i in range(10): pass', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('In Python, you can use the for loop to iterate over a sequence of values. You can use the sorted() function to iterate over the sequence in sorted order. For example, to print the elements of a list in sorted order, you can use the following code: my_list = [3, 1, 4, 1, 5, 9, 2, 6, 5]; for item in sorted(my_list): print(item)', '00000000-0000-0000-0000-000000000000', 31);
INSERT INTO answers (answer_text, user_id, question_id) VALUES ('You can use the for loop in Python to iterate over a sequence of values. You can use the range() function with a step value to iterate over every nth value in the sequence. For example, to print every third number from 1 to 10, you can use the following code: for i in range(1, 11, 31): print(i)', '00000000-0000-0000-0000-000000000000', 31);

-- Upvotes, one questions and one answer
INSERT INTO upvotes (user_id, question_id) VALUES ('00000000-0000-0000-0000-000000000000', 1);
INSERT INTO upvotes (user_id, answer_id) VALUES ('00000000-0000-0000-0000-000000000000', 2);