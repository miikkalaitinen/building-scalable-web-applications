version: '3.4'

volumes:
  astro_node_modules:

services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - programming-api
      - programming-ui
    ports:
      - 7800:7800

  programming-api:
    build:
      context: programming-api
      dockerfile: Dockerfile.prod
    image: programming-api
    restart: 'on-failure'
    volumes:
      - ./programming-api/:/app
      - ./app-cache/:/app-cache
    expose:
      - 7777
    depends_on:
      - database
      - flyway
      - redis
    env_file:
      - project.env
    deploy:
      restart_policy:
        condition: on-failure
        delay: '5s'
        max_attempts: 5
        window: '30s'

  programming-ui:
    build:
      context: programming-ui
      dockerfile: Dockerfile.prod
    image: programming-ui
    restart: 'on-failure'
    volumes:
      - ./programming-ui/:/app
      - astro_node_modules:/app/node_modules
    expose:
      - 3000
    depends_on:
      - programming-api
    deploy:
      restart_policy:
        condition: on-failure
        delay: '5s'
        max_attempts: 5
        window: '30s'

  grader-api:
    build:
      context: grader-api
      dockerfile: Dockerfile.prod
    image: grader-api
    restart: 'on-failure'
    depends_on:
      - database
      - flyway
      - redis
    volumes:
      - ./grader-api/:/app
      - ./app-cache/:/app-cache
      - '/var/run/docker.sock:/var/run/docker.sock'
    expose:
      - 7000
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: '5s'
        max_attempts: 5
        window: '30s'

  database:
    container_name: database-server-dab-p1-56a1311e-df76-4b02-8db8-99f2bd86fafa
    image: postgres:14.1
    restart: 'no'
    env_file:
      - project.env

  redis:
    image: redis:latest
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    expose:
      - 6379

  flyway:
    image: flyway/flyway:9.11.0-alpine
    depends_on:
      - database
    volumes:
      - ./flyway/sql/:/flyway/sql
    command: -connectRetries=60 -baselineOnMigrate=true migrate
    env_file:
      - project.env

  e2e-playwright:
    entrypoint: '/bin/true'
    build: e2e-playwright
    image: e2e-playwright
    network_mode: host
    depends_on:
      - nginx
      - programming-api
      - programming-ui
      - grader-api
      - database
      - redis
      - flyway
    volumes:
      - ./e2e-playwright/tests:/e2e-playwright/tests
